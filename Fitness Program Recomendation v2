class UserProfile:
    def __init__(self, goal, sub_goal=None):
        self.goal = goal
        self.sub_goal = sub_goal

class FitnessProgram:
    def __init__(self, name, description):
        self.name = name
        self.description = description

def get_user_selection(options):
    for number, option in enumerate(options, 1):
        print(f"{number}. {option}")
    selection = int(input("Select a number: "))
    return options[selection - 1]

def recommend_program(user):
    if user.goal == "Body Composition":
        if user.sub_goal == "Muscle Gain":
            return FitnessProgram("Hypertrophy Program", "Focused on muscle building with 8-12 reps.")
        elif user.sub_goal == "Fat Loss":
            return FitnessProgram("Fat Loss Program", "Includes high intensity interval training.")
    elif user.goal == "Endurance":
        return FitnessProgram("Endurance Program", "Consists of long-duration cardio sessions.")
    # Add more conditions for other goals as needed
    else:
        return FitnessProgram("General Fitness", "A balanced routine suitable for overall health and fitness.")

def main():
    print("What is your primary fitness goal?")
    goals = ["Body Composition", "Endurance", "Flexibility", "Strength", "General Fitness"]
    goal = get_user_selection(goals)

    sub_goal = None
    if goal == "Body Composition":
        print("Do you want to focus on Muscle Gain or Fat Loss?")
        sub_goals = ["Muscle Gain", "Fat Loss"]
        sub_goal = get_user_selection(sub_goals)

    user = UserProfile(goal, sub_goal)
    program = recommend_program(user)

    print(f"\nRecommended Program: {program.name}")
    print(f"Program Details: {program.description}")

if __name__ == "__main__":
    main()